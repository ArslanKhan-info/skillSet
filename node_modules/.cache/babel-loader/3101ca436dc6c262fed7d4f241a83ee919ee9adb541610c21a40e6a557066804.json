{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\accor\\\\src\\\\component\\\\Accordian.jsx\";\nimport React, { useState } from 'react';\nimport { data } from './../constant/constant';\nimport style from './Acc.module.scss';\nimport { Accordion, Collapse } from 'reactstrap';\nimport ListItem from './ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Accordian extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createNewArray = data => {\n      const arr = [];\n      data.forEach(item => {\n        const path = item.path.split(\"/\");\n        let currentNode = arr;\n        path.forEach((name, index) => {\n          if (index === path.length - 1) {\n            currentNode.push({\n              name,\n              file: item\n            });\n          } else {\n            const existingNode = currentNode.find(node => node.name === name);\n            //   console.log(name,currentNode)\n            if (existingNode) {\n              currentNode = existingNode.child;\n            } else {\n              const newNode = {\n                name,\n                collaps: true,\n                child: []\n              };\n              currentNode.push(newNode);\n              currentNode = newNode.child;\n            }\n          }\n        });\n      });\n      return this.setState(state => ({\n        newArr: arr\n      }));\n    };\n    this.state = {\n      newArr: [],\n      test: 'adyg'\n    };\n  }\n  componentDidMount() {\n    this.createNewArray(data);\n  }\n  render() {\n    return this.state.newArr.map((prop, key) => {\n      if (prop.collaps) {\n        let firstdd = {};\n        firstdd[prop[\"name\"]] = !this.state[prop.name];\n        // this.setState([prop[\"name\"]])\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            ...prop\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), prop.child.map((prop2, key) => {\n            let secondd = {};\n            secondd[prop[\"name\"]] = !this.state[prop.name];\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                ...prop2\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), prop2.child.map((prop3, key) => {\n                let thirdd = {};\n                thirdd[prop[\"name\"]] = !this.state[prop.name];\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  ...prop3\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true);\n          })]\n        }, void 0, true);\n      }\n    });\n  }\n}\nexport default Accordian;","map":{"version":3,"names":["React","useState","data","style","Accordion","Collapse","ListItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Accordian","Component","constructor","props","createNewArray","arr","forEach","item","path","split","currentNode","name","index","length","push","file","existingNode","find","node","child","newNode","collaps","setState","state","newArr","test","componentDidMount","render","map","prop","key","firstdd","children","fileName","_jsxFileName","lineNumber","columnNumber","prop2","secondd","prop3","thirdd"],"sources":["D:/practice/accor/src/component/Accordian.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { data } from './../constant/constant';\r\nimport style from './Acc.module.scss'\r\nimport { Accordion, Collapse } from 'reactstrap';\r\nimport ListItem from './ListItem';\r\n\r\nclass Accordian extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            newArr:[],\r\n            test:'adyg'\r\n        }\r\n    }\r\n\r\n    createNewArray=(data)=> {\r\n        const arr = [];\r\n        data.forEach((item) => {\r\n          const path = item.path.split(\"/\");\r\n          let currentNode = arr;\r\n      \r\n          path.forEach((name, index) => {\r\n            if (index === path.length - 1) {\r\n                currentNode.push({\r\n                  name,\r\n                  file: item,\r\n                });\r\n              }else{\r\n                  const existingNode = currentNode.find((node) => node.name === name);\r\n                //   console.log(name,currentNode)\r\n                  if (existingNode) {\r\n                    currentNode = existingNode.child;\r\n                  } else {\r\n                    const newNode = {\r\n                      name,\r\n                      collaps: true,\r\n                      child: [],\r\n                    };\r\n                    currentNode.push(newNode);\r\n                    currentNode = newNode.child;\r\n                  }\r\n    \r\n              }\r\n          });\r\n        });\r\n      \r\n        return this.setState(state=>({newArr:arr}));\r\n      }\r\n    componentDidMount(){\r\n        this.createNewArray(data)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            this.state.newArr.map((prop,key)=>{\r\n                if(prop.collaps){\r\n                    let firstdd = {};\r\n                    firstdd[prop[\"name\"]] = !this.state[prop.name];\r\n                    // this.setState([prop[\"name\"]])\r\n                    return(\r\n                        <>\r\n                        <ListItem key={key} {...prop}/>\r\n                        {prop.child.map((prop2,key)=>{\r\n                            let secondd = {};\r\n                            secondd[prop[\"name\"]] = !this.state[prop.name];\r\n                                return(\r\n                                    <>\r\n                                    <ListItem key={key} {...prop2}/>\r\n                                    {prop2.child.map((prop3,key)=>{\r\n                                        let thirdd = {};\r\n                                        thirdd[prop[\"name\"]] = !this.state[prop.name];\r\n                                            return(\r\n                                                <ListItem key={key} {...prop3}/>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                        </>\r\n                        \r\n                    )\r\n                }\r\n            })\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordian"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}