{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\accor\\\\src\\\\component\\\\Accordian.jsx\";\nimport React, { useState } from 'react';\nimport { data } from './../constant/constant';\nimport style from './Acc.module.scss';\nimport { Accordion, Collapse } from 'reactstrap';\nimport ListItem from './ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Accordian extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createNewArray = data => {\n      const arr = [];\n      data.forEach(item => {\n        const path = item.path.split(\"/\");\n        let currentNode = arr;\n        path.forEach((name, index) => {\n          if (index === path.length - 1) {\n            currentNode.push({\n              name,\n              file: item\n            });\n          } else {\n            const existingNode = currentNode.find(node => node.name === name);\n            //   console.log(name,currentNode)\n            if (existingNode) {\n              currentNode = existingNode.child;\n            } else {\n              const newNode = {\n                name,\n                collaps: true,\n                child: []\n              };\n              currentNode.push(newNode);\n              currentNode = newNode.child;\n            }\n          }\n        });\n      });\n      return this.setState(state => ({\n        newArr: arr\n      }));\n    };\n    this.state = {\n      newArr: [],\n      test: 'adyg'\n    };\n  }\n  componentDidMount() {\n    this.createNewArray(data);\n  }\n  render() {\n    console.log(this.state);\n    return this.state.newArr.map((prop, key) => {\n      if (prop.collaps) {\n        let firstdd = {};\n        firstdd[prop[\"name\"]] = !this.state[prop.name];\n        // this.setState([prop[\"name\"]])\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            ...prop,\n            Click: () => this.setState(firstdd)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: this.state[prop.name],\n            children: prop.child.map((prop2, key) => {\n              let secondd = {};\n              secondd[prop2[\"name\"]] = !this.state[prop2.name];\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  ...prop2,\n                  Click: () => this.setState(secondd)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  isOpen: this.state[prop2.name]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this), prop2.child.map((prop3, key) => {\n                  let thirdd = {};\n                  thirdd[prop3[\"name\"]] = !this.state[prop3.name];\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    ...prop3,\n                    Click: () => this.setState(thirdd)\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 57\n                  }, this);\n                })]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  }\n}\nexport default Accordian;","map":{"version":3,"names":["React","useState","data","style","Accordion","Collapse","ListItem","jsxDEV","_jsxDEV","Accordian","Component","constructor","props","createNewArray","arr","forEach","item","path","split","currentNode","name","index","length","push","file","existingNode","find","node","child","newNode","collaps","setState","state","newArr","test","componentDidMount","render","console","log","map","prop","key","firstdd","Fragment","children","Click","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","prop2","secondd","prop3","thirdd"],"sources":["D:/practice/accor/src/component/Accordian.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { data } from './../constant/constant';\r\nimport style from './Acc.module.scss'\r\nimport { Accordion, Collapse } from 'reactstrap';\r\nimport ListItem from './ListItem';\r\n\r\nclass Accordian extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            newArr:[],\r\n            test:'adyg'\r\n        }\r\n    }\r\n\r\n    createNewArray=(data)=> {\r\n        const arr = [];\r\n        data.forEach((item) => {\r\n          const path = item.path.split(\"/\");\r\n          let currentNode = arr;\r\n      \r\n          path.forEach((name, index) => {\r\n            if (index === path.length - 1) {\r\n                currentNode.push({\r\n                  name,\r\n                  file: item,\r\n                });\r\n              }else{\r\n                  const existingNode = currentNode.find((node) => node.name === name);\r\n                //   console.log(name,currentNode)\r\n                  if (existingNode) {\r\n                    currentNode = existingNode.child;\r\n                  } else {\r\n                    const newNode = {\r\n                      name,\r\n                      collaps: true,\r\n                      child: [],\r\n                    };\r\n                    currentNode.push(newNode);\r\n                    currentNode = newNode.child;\r\n                  }\r\n    \r\n              }\r\n          });\r\n        });\r\n      \r\n        return this.setState(state=>({newArr:arr}));\r\n      }\r\n    componentDidMount(){\r\n        this.createNewArray(data)\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        return (\r\n            this.state.newArr.map((prop,key)=>{\r\n                if(prop.collaps){\r\n                    let firstdd = {};\r\n                    firstdd[prop[\"name\"]] = !this.state[prop.name];\r\n                    // this.setState([prop[\"name\"]])\r\n                    return(\r\n                        <React.Fragment key={key}>\r\n                            <ListItem  {...prop} Click={() => this.setState(firstdd)}/>\r\n                            <Collapse isOpen={this.state[prop.name]}>\r\n                                {prop.child.map((prop2,key)=>{\r\n                                    let secondd = {};\r\n                                    secondd[prop2[\"name\"]] = !this.state[prop2.name];\r\n                                        return(\r\n                                            <React.Fragment key={key}>\r\n                                            <ListItem  {...prop2} Click={() => this.setState(secondd)}/>\r\n                                            <Collapse isOpen={this.state[prop2.name]}>\r\n\r\n                                            </Collapse>\r\n                                            {prop2.child.map((prop3,key)=>{\r\n                                                let thirdd = {};\r\n                                                thirdd[prop3[\"name\"]] = !this.state[prop3.name];\r\n                                                    return(\r\n                                                        <ListItem key={key} {...prop3} Click={() => this.setState(thirdd)}/>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Collapse>\r\n                        </React.Fragment>\r\n                        \r\n                    )\r\n                }\r\n            })\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordian"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,SAAST,KAAK,CAACU,SAAS,CAAC;EACpCC,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAAA,KAOhBC,cAAc,GAAEX,IAAI,IAAI;MACpB,MAAMY,GAAG,GAAG,EAAE;MACdZ,IAAI,CAACa,OAAO,CAAEC,IAAI,IAAK;QACrB,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;QACjC,IAAIC,WAAW,GAAGL,GAAG;QAErBG,IAAI,CAACF,OAAO,CAAC,CAACK,IAAI,EAAEC,KAAK,KAAK;UAC5B,IAAIA,KAAK,KAAKJ,IAAI,CAACK,MAAM,GAAG,CAAC,EAAE;YAC3BH,WAAW,CAACI,IAAI,CAAC;cACfH,IAAI;cACJI,IAAI,EAAER;YACR,CAAC,CAAC;UACJ,CAAC,MAAI;YACD,MAAMS,YAAY,GAAGN,WAAW,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACP,IAAI,KAAKA,IAAI,CAAC;YACrE;YACE,IAAIK,YAAY,EAAE;cAChBN,WAAW,GAAGM,YAAY,CAACG,KAAK;YAClC,CAAC,MAAM;cACL,MAAMC,OAAO,GAAG;gBACdT,IAAI;gBACJU,OAAO,EAAE,IAAI;gBACbF,KAAK,EAAE;cACT,CAAC;cACDT,WAAW,CAACI,IAAI,CAACM,OAAO,CAAC;cACzBV,WAAW,GAAGU,OAAO,CAACD,KAAK;YAC7B;UAEJ;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,OAAO,IAAI,CAACG,QAAQ,CAACC,KAAK,KAAG;QAACC,MAAM,EAACnB;MAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IAtCC,IAAI,CAACkB,KAAK,GAAE;MACRC,MAAM,EAAC,EAAE;MACTC,IAAI,EAAC;IACT,CAAC;EACL;EAmCAC,iBAAiBA,CAAA,EAAE;IACf,IAAI,CAACtB,cAAc,CAACX,IAAI,CAAC;EAC7B;EAEAkC,MAAMA,CAAA,EAAE;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAAC;IACvB,OACI,IAAI,CAACA,KAAK,CAACC,MAAM,CAACM,GAAG,CAAC,CAACC,IAAI,EAACC,GAAG,KAAG;MAC9B,IAAGD,IAAI,CAACV,OAAO,EAAC;QACZ,IAAIY,OAAO,GAAG,CAAC,CAAC;QAChBA,OAAO,CAACF,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAACR,KAAK,CAACQ,IAAI,CAACpB,IAAI,CAAC;QAC9C;QACA,oBACIZ,OAAA,CAACR,KAAK,CAAC2C,QAAQ;UAAAC,QAAA,gBACXpC,OAAA,CAACF,QAAQ;YAAA,GAAMkC,IAAI;YAAEK,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACd,QAAQ,CAACW,OAAO;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAC3DzC,OAAA,CAACH,QAAQ;YAAC6C,MAAM,EAAE,IAAI,CAAClB,KAAK,CAACQ,IAAI,CAACpB,IAAI,CAAE;YAAAwB,QAAA,EACnCJ,IAAI,CAACZ,KAAK,CAACW,GAAG,CAAC,CAACY,KAAK,EAACV,GAAG,KAAG;cACzB,IAAIW,OAAO,GAAG,CAAC,CAAC;cAChBA,OAAO,CAACD,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAACnB,KAAK,CAACmB,KAAK,CAAC/B,IAAI,CAAC;cAC5C,oBACIZ,OAAA,CAACR,KAAK,CAAC2C,QAAQ;gBAAAC,QAAA,gBACfpC,OAAA,CAACF,QAAQ;kBAAA,GAAM6C,KAAK;kBAAEN,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACd,QAAQ,CAACqB,OAAO;gBAAE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAE,eAC5DzC,OAAA,CAACH,QAAQ;kBAAC6C,MAAM,EAAE,IAAI,CAAClB,KAAK,CAACmB,KAAK,CAAC/B,IAAI;gBAAE;kBAAA0B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAE9B,EACVE,KAAK,CAACvB,KAAK,CAACW,GAAG,CAAC,CAACc,KAAK,EAACZ,GAAG,KAAG;kBAC1B,IAAIa,MAAM,GAAG,CAAC,CAAC;kBACfA,MAAM,CAACD,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAACrB,KAAK,CAACqB,KAAK,CAACjC,IAAI,CAAC;kBAC3C,oBACIZ,OAAA,CAACF,QAAQ;oBAAA,GAAe+C,KAAK;oBAAER,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACd,QAAQ,CAACuB,MAAM;kBAAE,GAAnDb,GAAG;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAkD;gBAE5E,CAAC,CAAC;cAAA,GAXeR,GAAG;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAaP;YAEzB,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEC;QAAA,GAxBMR,GAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAyBP;MAGzB;IACJ,CAAC,CAAC;EAIV;AACJ;AAEA,eAAexC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}